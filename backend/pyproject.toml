[tool.poetry]
name = "resolute-bottle"
version = "0.1.0"
description = ""
authors = ["Zach \"theY4Kman\" Kanzler <they4kman@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"

Django = { version = "^3.2a1", allow-prereleases = true }
django-environ = "^0.4.5"
djangorestframework = "^3.12.4"
djangorestframework-filters ={ version = "^1.0.0dev2", allow-prereleases = true }
psycopg2-binary = "^2.8.6"
requests = "^2.25.1"
tqdm = "^4.59.0"

[tool.poetry.dev-dependencies]
django-extensions = "^3.1.1"
pytest = "^6.2.2"
pytest-assert-utils = "^0.2.2"
pytest-camel-collect = "^1.0.2"
pytest-django = "^4.1.0"
pytest-drf = "^1.1.2"
pytest-icdiff = "^0.5"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
addopts = [
    # Verbosity
    #  0 - hide test names while running (only showing ".", "F", etc)
    #  1 - show full test names while running
    #  2 - don't truncate assertion failure printouts (includes full diffs)
    "--verbosity=2",

    # Show an abbreviated traceback format
    "--tb=short",

    # Also run doctests
    "--doctest-modules",

    # Disable migrations â€” instead, setup the tables directly from models (pytest-django)
    "--nomigrations",

    # Reuse schema (not data) from previous test runs (if available).
    # NOTE: if changes are made to schema, pass `--create-db` to force
    #       pytest-django to initialize the test DB with the schema changes
    "--reuse-db",

    # Show a few of the slowest test durations (just to keep perf in purview)
    "--durations=5",
]

# Only search for tests within files matching these patterns
python_files = "tests.py test_*.py"

# Discover tests within classes matching these patterns
# NOTE: the dash represents a word boundary (provided by pytest-camel-collect)
python_classes = "Test-* Describe-* Context-* With-* Without-* For-* When-* If-* Case-*"

# Only methods matching these patterns are considered tests
python_functions = "test_* it_* its_*"
